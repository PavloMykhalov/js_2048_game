{"mappings":"AAAA;AAEA,uBAAuB;AACvB,MAAM,QAAQ,SAAS,gBAAgB,CAAC;AACxC,MAAM,cAAc,SAAS,aAAa,CAAC;AAC3C,MAAM,eAAe,SAAS,aAAa,CAAC;AAC5C,MAAM,eAAe,SAAS,aAAa,CAAC;AAC5C,MAAM,cAAc,SAAS,aAAa,CAAC;AAC3C,MAAM,aAAa,SAAS,aAAa,CAAC;AAE1C,MAAM,aAAa;AACnB,MAAM,WAAW;AACjB,IAAI,QAAQ;AACZ,IAAI,YAAY;IACd;QAAC;QAAG;QAAG;QAAG;KAAE;IACZ;QAAC;QAAG;QAAG;QAAG;KAAE;IACZ;QAAC;QAAG;QAAG;QAAG;KAAE;IACZ;QAAC;QAAG;QAAG;QAAG;KAAE;CACb;AAED,SAAS;IACP,YAAY;QACV;YAAC;YAAG;YAAG;YAAG;SAAE;QACZ;YAAC;YAAG;YAAG;YAAG;SAAE;QACZ;YAAC;YAAG;YAAG;YAAG;SAAE;QACZ;YAAC;YAAG;YAAG;YAAG;SAAE;KACb;IAED,MAAM,OAAO,CAAC,CAAA;QACZ,KAAK,SAAS,GAAG;IACnB;AACF;AAEA,SAAS;IACP,MAAM,aAAa,MAAM,IAAI,CAAC,OAAO,MAAM,CAAC,CAAA,OAAQ,KAAK,SAAS,KAAK;IAEvE,IAAI,WAAW,MAAM,KAAK,GACxB;IAGF,MAAM,aACJ,UAAU,CAAC,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,WAAW,MAAM,EAAE;IAC3D,MAAM,WAAW,WAAW,aAAa,CAAC,QAAQ;IAClD,MAAM,cAAc,WAAW,SAAS;IAExC,IAAI,SAAS,CAAC,SAAS,CAAC,YAAY,KAAK,GAAG;QAC1C,SAAS,CAAC,SAAS,CAAC,YAAY,GAAG,KAAK,MAAM,KAAK,MAAM,IAAI;QAC7D,WAAW,SAAS,GAAG,SAAS,CAAC,SAAS,CAAC,YAAY,CAAC,QAAQ;IAClE,OAAO,IAAI,SAAS,CAAC,SAAS,CAAC,YAAY,KAAK,GAC9C;AAEJ;AAEA,SAAS;IACP,UAAU,OAAO,CAAC,CAAC,KAAK;QACtB,IAAI,OAAO,CAAC,CAAC,OAAO;YAClB,MAAM,QAAQ,WAAW,IAAI;YAC7B,MAAM,OAAO,KAAK,CAAC,MAAM;YAEzB,KAAK,SAAS,GAAG,UAAU,IAAI,KAAK;YAEpC,KAAK,SAAS,GAAG,UAAU,IACvB,eACA,CAAC,uBAAuB,EAAE,MAAM,CAAC;QACvC;IACF;IAEA,aAAa,SAAS,GAAG;AAC3B;AAEA,SAAS;IACP;IACA;IACA;IACA,QAAQ;IACR;IACA,YAAY,SAAS,CAAC,MAAM,CAAC;IAC7B,YAAY,SAAS,CAAC,GAAG,CAAC;IAC1B,YAAY,SAAS,GAAG;IACxB,aAAa,SAAS,CAAC,GAAG,CAAC;IAC3B,YAAY,SAAS,CAAC,GAAG,CAAC;AAC5B;AAEA,SAAS;IACP,IAAI,CAAC,aAAa,CAAC,aACjB,YAAY,SAAS,CAAC,MAAM,CAAC;AAEjC;AAEA,SAAS;IACP,IAAK,IAAI,MAAM,GAAG,MAAM,YAAY,MAAO;QACzC,IAAK,IAAI,MAAM,GAAG,MAAM,YAAY,MAClC,IAAI,SAAS,CAAC,IAAI,CAAC,IAAI,KAAK,MAAM;YAChC,WAAW,SAAS,CAAC,MAAM,CAAC;YAE5B,OAAO;QACT;IAEJ;IAEA,OAAO;AACT;AAEA,SAAS,eAAe,GAAG;IACzB,IAAI,cAAc;IAElB,IAAI,CAAC,UAAU;QACb,MAAM,gBAAgB,KAAK,KAAK,CAAC,KAAK,SAAS,CAAC;QAChD,IAAI,QAAQ;QAEZ,OAAQ,IAAI,GAAG;YACb,KAAK;gBACH;gBACA;YAEF,KAAK;gBACH;gBACA;YAEF,KAAK;gBACH;gBACA;YAEF,KAAK;gBACH;gBACA;YAEF;gBACE;QACJ;QAEA,IAAI,CAAC,gBAAgB,eAAe,YAClC,QAAQ;QAGV,IAAI,OACF;QAGF;QACA;QACA;IACF;AACF;AAEA,SAAS;IACP,IAAK,IAAI,WAAW,GAAG,WAAW,YAAY,WAAY;QACxD,IAAI,SAAS,EAAE;QAEf,IAAK,IAAI,WAAW,GAAG,WAAW,YAAY,WAC5C,OAAO,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,SAAS;QAG3C,SAAS,WAAW;QAEpB,IAAK,IAAI,WAAW,GAAG,WAAW,YAAY,WAC5C,SAAS,CAAC,SAAS,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS;IAEpD;AACF;AAEA,SAAS;IACP,IAAK,IAAI,WAAW,GAAG,WAAW,YAAY,WAAY;QACxD,IAAI,SAAS,EAAE;QAEf,IAAK,IAAI,WAAW,GAAG,YAAY,GAAG,WACpC,OAAO,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,SAAS;QAG3C,SAAS,WAAW;QAEpB,IAAK,IAAI,WAAW,GAAG,YAAY,GAAG,WACpC,SAAS,CAAC,SAAS,CAAC,SAAS,GAAG,OAAO,KAAK;IAEhD;AACF;AAEA,SAAS;IACP,UAAU,OAAO,CAAC,CAAC,KAAK;QACtB,MAAM,UAAU,WAAW;QAE3B,SAAS,CAAC,SAAS,GAAG;IACxB;AACF;AAEA,SAAS;IACP,UAAU,OAAO,CAAC,CAAC,KAAK;QACtB,MAAM,cAAc,IAAI,KAAK,GAAG,OAAO;QACvC,MAAM,kBAAkB,WAAW;QAEnC,SAAS,CAAC,SAAS,GAAG,gBAAgB,KAAK,GAAG,OAAO;IACvD;AACF;AAEA,SAAS,WAAW,GAAG;IACrB,IAAI,SAAS,aAAa;IAE1B,IAAK,IAAI,IAAI,GAAG,IAAI,OAAO,MAAM,GAAG,GAAG,IACrC,IAAI,MAAM,CAAC,EAAE,KAAK,MAAM,CAAC,IAAI,EAAE,EAAE;QAC/B,MAAM,CAAC,EAAE,IAAI;QACb,MAAM,CAAC,IAAI,EAAE,GAAG;QAChB,SAAS,MAAM,CAAC,EAAE;IACpB;IAGF,SAAS,aAAa;IAEtB,MAAO,OAAO,MAAM,GAAG,WACrB,OAAO,IAAI,CAAC;IAGd,OAAO;AACT;AAEA,SAAS,aAAa,GAAG;IACvB,OAAO,IAAI,MAAM,CAAC,CAAA,QAAS,UAAU;AACvC;AAEA,SAAS;IACP,IAAK,IAAI,MAAM,GAAG,MAAM,aAAa,GAAG,MACtC,IAAK,IAAI,MAAM,GAAG,MAAM,aAAa,GAAG,MAAO;QAC7C,IAAI,SAAS,CAAC,IAAI,CAAC,IAAI,KAAK,SAAS,CAAC,MAAM,EAAE,CAAC,IAAI,IAC9C,SAAS,CAAC,IAAI,CAAC,IAAI,KAAK,SAAS,CAAC,IAAI,CAAC,MAAM,EAAE,EAClD,OAAO;QAGT,IACE,oBAAoB,KAAK,KAAK,SAC3B,oBAAoB,KAAK,KAAK,WAC9B,oBAAoB,KAAK,KAAK,WAC9B,oBAAoB,KAAK,KAAK,UAEjC,OAAO;IAEX;IAGF,OAAO;AACT;AAEA,SAAS;IACP,IAAK,IAAI,MAAM,GAAG,MAAM,YAAY,MAClC,IAAK,IAAI,MAAM,GAAG,MAAM,YAAY,MAAO;QACzC,IAAI,SAAS,CAAC,IAAI,CAAC,IAAI,KAAK,GAC1B,OAAO;IAEX;IAGF,OAAO;AACT;AAEA,SAAS,oBAAoB,GAAG,EAAE,GAAG,EAAE,SAAS;IAC9C,OAAQ;QACN,KAAK;YACH,OAAO,MAAM,KAAK,SAAS,CAAC,IAAI,CAAC,IAAI,KAAK,SAAS,CAAC,MAAM,EAAE,CAAC,IAAI;QACnE,KAAK;YACH,OAAO,MAAM,aAAa,KACrB,SAAS,CAAC,IAAI,CAAC,IAAI,KAAK,SAAS,CAAC,MAAM,EAAE,CAAC,IAAI;QACtD,KAAK;YACH,OAAO,MAAM,KAAK,SAAS,CAAC,IAAI,CAAC,IAAI,KAAK,SAAS,CAAC,IAAI,CAAC,MAAM,EAAE;QACnE,KAAK;YACH,OAAO,MAAM,aAAa,KACrB,SAAS,CAAC,IAAI,CAAC,IAAI,KAAK,SAAS,CAAC,IAAI,CAAC,MAAM,EAAE;QACtD;YACE,OAAO;IACX;AACF;AAEA,SAAS,gBAAgB,IAAI,EAAE,IAAI;IACjC,IAAI,KAAK,MAAM,KAAK,KAAK,MAAM,EAC7B,OAAO;IAGT,IAAK,IAAI,IAAI,GAAG,IAAI,KAAK,MAAM,EAAE,IAAK;QACpC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,KAAK,QAAU,QAAQ,IAAI,CAAC,EAAE,CAAC,MAAM,GACvD,OAAO;IAEX;IAEA,OAAO;AACT;AAEA,YAAY,gBAAgB,CAAC,SAAS;AACtC,SAAS,gBAAgB,CAAC,WAAW,CAAC,MAAQ,eAAe","sources":["src/scripts/main.js"],"sourcesContent":["'use strict';\n\n// write your code here\nconst cells = document.querySelectorAll('.field-cell');\nconst startButton = document.querySelector('.button.start');\nconst scoreElement = document.querySelector('.game-score');\nconst messageStart = document.querySelector('.message.message-start');\nconst messageLose = document.querySelector('.message.message-lose');\nconst messageWin = document.querySelector('.message.message-win');\n\nconst BOARD_SIZE = 4;\nconst gameOver = false;\nlet score = 0;\nlet gameBoard = [\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n];\n\nfunction clearBoard() {\n  gameBoard = [\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n  ];\n\n  cells.forEach(cell => {\n    cell.innerText = '';\n  });\n}\n\nfunction addRandomTile() {\n  const emptyCells = Array.from(cells).filter(cell => cell.innerText === '');\n\n  if (emptyCells.length === 0) {\n    return;\n  }\n\n  const randomCell\n  = emptyCells[Math.floor(Math.random() * emptyCells.length)];\n  const rowIndex = randomCell.parentElement.rowIndex;\n  const columnIndex = randomCell.cellIndex;\n\n  if (gameBoard[rowIndex][columnIndex] === 0) {\n    gameBoard[rowIndex][columnIndex] = Math.random() < 0.9 ? 2 : 4;\n    randomCell.innerText = gameBoard[rowIndex][columnIndex].toString();\n  } else if (gameBoard[rowIndex][columnIndex] !== 0) {\n    addRandomTile();\n  }\n}\n\nfunction updateBoard() {\n  gameBoard.forEach((row, rowIndex) => {\n    row.forEach((value, columnIndex) => {\n      const index = rowIndex * 4 + columnIndex;\n      const cell = cells[index];\n\n      cell.innerText = value === 0 ? '' : value;\n\n      cell.className = value === 0\n        ? 'field-cell'\n        : `field-cell field-cell--${value}`;\n    });\n  });\n\n  scoreElement.innerText = score;\n}\n\nfunction startGame() {\n  clearBoard();\n  addRandomTile();\n  addRandomTile();\n  score = 0;\n  updateBoard();\n  startButton.classList.remove('start');\n  startButton.classList.add('restart');\n  startButton.innerText = 'Restart';\n  messageStart.classList.add('hidden');\n  messageLose.classList.add('hidden');\n}\n\nfunction checkLose() {\n  if (!canMove() && !canMerged()) {\n    messageLose.classList.remove('hidden');\n  }\n}\n\nfunction checkWin() {\n  for (let row = 0; row < BOARD_SIZE; row++) {\n    for (let col = 0; col < BOARD_SIZE; col++) {\n      if (gameBoard[row][col] === 2048) {\n        messageWin.classList.remove('hidden');\n\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction handleKeyPress(evt) {\n  evt.preventDefault();\n\n  if (!gameOver) {\n    const originalBoard = JSON.parse(JSON.stringify(gameBoard));\n    let moved = false;\n\n    switch (evt.key) {\n      case 'ArrowUp':\n        moveTilesUp();\n        break;\n\n      case 'ArrowDown':\n        moveTilesDown();\n        break;\n\n      case 'ArrowLeft':\n        moveTilesLeft();\n        break;\n\n      case 'ArrowRight':\n        moveTilesRight();\n        break;\n\n      default:\n        break;\n    }\n\n    if (!hasBoardChanged(originalBoard, gameBoard)) {\n      moved = true;\n    }\n\n    if (moved) {\n      addRandomTile();\n    }\n\n    updateBoard();\n    checkWin();\n    checkLose();\n  }\n}\n\nfunction moveTilesUp() {\n  for (let colIndex = 0; colIndex < BOARD_SIZE; colIndex++) {\n    let column = [];\n\n    for (let rowIndex = 0; rowIndex < BOARD_SIZE; rowIndex++) {\n      column.push(gameBoard[rowIndex][colIndex]);\n    }\n\n    column = slideTiles(column);\n\n    for (let rowIndex = 0; rowIndex < BOARD_SIZE; rowIndex++) {\n      gameBoard[rowIndex][colIndex] = column[rowIndex];\n    }\n  }\n}\n\nfunction moveTilesDown() {\n  for (let colIndex = 0; colIndex < BOARD_SIZE; colIndex++) {\n    let column = [];\n\n    for (let rowIndex = 3; rowIndex >= 0; rowIndex--) {\n      column.push(gameBoard[rowIndex][colIndex]);\n    }\n\n    column = slideTiles(column);\n\n    for (let rowIndex = 3; rowIndex >= 0; rowIndex--) {\n      gameBoard[rowIndex][colIndex] = column.shift();\n    }\n  }\n}\n\nfunction moveTilesLeft() {\n  gameBoard.forEach((row, rowIndex) => {\n    const slidRow = slideTiles(row);\n\n    gameBoard[rowIndex] = slidRow;\n  });\n}\n\nfunction moveTilesRight() {\n  gameBoard.forEach((row, rowIndex) => {\n    const reversedRow = row.slice().reverse();\n    const slidReversedRow = slideTiles(reversedRow);\n\n    gameBoard[rowIndex] = slidReversedRow.slice().reverse();\n  });\n}\n\nfunction slideTiles(row) {\n  let result = removeZeroes(row);\n\n  for (let i = 0; i < result.length - 1; i++) {\n    if (result[i] === result[i + 1]) {\n      result[i] *= 2;\n      result[i + 1] = 0;\n      score += result[i];\n    }\n  }\n\n  result = removeZeroes(result);\n\n  while (result.length < BOARD_SIZE) {\n    result.push(0);\n  }\n\n  return result;\n}\n\nfunction removeZeroes(row) {\n  return row.filter(value => value !== 0);\n}\n\nfunction canMerged() {\n  for (let row = 0; row < BOARD_SIZE - 1; row++) {\n    for (let col = 0; col < BOARD_SIZE - 1; col++) {\n      if (gameBoard[row][col] === gameBoard[row + 1][col]\n        || gameBoard[row][col] === gameBoard[row][col + 1]) {\n        return true;\n      }\n\n      if (\n        canMergeInDirection(row, col, 'up')\n        || canMergeInDirection(row, col, 'down')\n        || canMergeInDirection(row, col, 'left')\n        || canMergeInDirection(row, col, 'right')\n      ) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction canMove() {\n  for (let row = 0; row < BOARD_SIZE; row++) {\n    for (let col = 0; col < BOARD_SIZE; col++) {\n      if (gameBoard[row][col] === 0) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction canMergeInDirection(row, col, direction) {\n  switch (direction) {\n    case 'up':\n      return row > 0 && gameBoard[row][col] === gameBoard[row - 1][col];\n    case 'down':\n      return row < BOARD_SIZE - 1\n        && gameBoard[row][col] === gameBoard[row + 1][col];\n    case 'left':\n      return col > 0 && gameBoard[row][col] === gameBoard[row][col - 1];\n    case 'right':\n      return col < BOARD_SIZE - 1\n        && gameBoard[row][col] === gameBoard[row][col + 1];\n    default:\n      return false;\n  }\n}\n\nfunction hasBoardChanged(arr1, arr2) {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n\n  for (let i = 0; i < arr1.length; i++) {\n    if (!arr1[i].every((val, index) => val === arr2[i][index])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nstartButton.addEventListener('click', startGame);\ndocument.addEventListener('keydown', (evt) => handleKeyPress(evt));\n"],"names":[],"version":3,"file":"index.f75de5e1.js.map","sourceRoot":"/__parcel_source_root/"}